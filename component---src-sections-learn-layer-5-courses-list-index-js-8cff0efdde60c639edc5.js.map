{"version":3,"sources":["webpack://Layer5/./src/components/Learn-Components/content-card/content.card.style.js","webpack://Layer5/./src/components/Learn-Components/content-card/index.js","webpack://Layer5/./src/components/image.js","webpack://Layer5/./src/reusecore/PageHeader/pageHeader.style.js","webpack://Layer5/./src/reusecore/PageHeader/index.js","webpack://Layer5/./src/sections/Blog/Blog-grid/blogGrid.style.js","webpack://Layer5/./src/sections/Learn-Layer5/Courses-List/courseslist.style.js","webpack://Layer5/./src/components/Learn-Components/get-started-section/get-started.styles.js","webpack://Layer5/./src/components/Learn-Components/get-started-section/index.js","webpack://Layer5/./src/sections/Learn-Layer5/Courses-List/index.js","webpack://Layer5/./src/utils/slugify.js"],"names":["styled","chapter","className","frontmatter","chapterTitle","courseTitle","description","videos","lectures","Button","childImageSharp","extension","publicURL","alt","rest","G","image","gatsbyImageData","src","authorField","author","isSlugAvailable","Link","to","slugify","name","category","title","subtitle","thumbnail","useStaticQuery","allMdx","nodes","some","matter","imgStyle","objectFit","key","BlogPageWrapper","LearnPathWrapper","coursesData","console","log","data","learnPathTitle","learnPath","theme","Navigation","PageHeader","fields","learnpath","split","reduce","idx","length","charAt","toUpperCase","slice","url","sm","lg","xl","map","tutorial","id","course","Footer","module","exports","text","toString","toLowerCase","replace"],"mappings":"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","file":"component---src-sections-learn-layer-5-courses-list-index-js-8cff0efdde60c639edc5.js","sourcesContent":["import styled from \"styled-components\";\n\nconst ContentCardWrapper = styled.div`\n  padding: 2rem;\n  margin: 2rem 0;\n  background-color: #fafafa;\n  display: flex;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  justify-content: space-between;\n  :hover {\n    border-color: black;\n    transition: background 150ms ease-out 0s, border 150ms ease-out 0s,\n      transform 150ms ease-out 0s;\n    transform: translate3d(0px, -3px, 0px);\n    box-shadow: rgba(0, 0, 0, 0.08) 0px 3px 10px 0px;\n  }\n\n  .card-link {\n    color: black;\n  }\n\n  .chapter-info {\n    display: flex;\n    width: 60%;\n    justify-content: space-between;\n    .info {\n      display: flex;\n      align-items: center;\n      span {\n        margin: 0 0.5rem;\n      }\n    }\n  }\n\n  .chapter-content {\n    h2 {\n      margin: 1rem 0;\n    }\n    p {\n      width: 85%;\n    }\n  }\n\n  .bookmark-btn-div {\n    display: flex;\n    align-items: end;\n  }\n\n  .bookmark-btn {\n    background-color: #fafafa;\n    min-width: auto;\n    :hover {\n      color: black;\n      background-color: #fafafa;\n    }\n  }\n  @media screen and (max-width: 1200px) {\n    .chapter-info {\n      width: 60%;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    .chapter-content-div {\n      padding: 1rem 0;\n    }\n    .bookmark-btn-div {\n      justify-content: end;\n    }\n\n    .chapter-info {\n      width: 80%;\n    }\n    .chapter-content {\n      p {\n        width: 100%;\n      }\n    }\n  }\n  @media screen and (max-width: 400px) {\n    padding: 1rem 1rem;\n    .chapter-info {\n      width: 100%;\n    }\n  }\n`;\n\nexport default ContentCardWrapper;\n","import React from \"react\";\nimport ContentCardWrapper from \"./content.card.style\";\nimport {\n  IoDocumentTextOutline,\n  IoVideocam,\n  IoBookmarkOutline,\n} from \"react-icons/io5\";\nimport Button from \"../../../reusecore/Button\";\n\nconst ContentCard = ({ chapter }) => (\n  <ContentCardWrapper>\n    <div className=\"chapter-content-div\">\n      <div className=\"chapter-content\">\n        <h2>\n          {chapter.frontmatter.chapterTitle\n            ? chapter.frontmatter.chapterTitle\n            : chapter.frontmatter.courseTitle}\n        </h2>\n        <p>{chapter.frontmatter.description}</p>\n      </div>\n      <div className=\"chapter-info\">\n        <div className=\"info\">\n          <IoVideocam /> <span>{chapter.frontmatter.videos} videos</span>\n        </div>\n        <div className=\"info\">\n          <IoDocumentTextOutline />{\" \"}\n          <span>{chapter.frontmatter.lectures} lectures</span>\n        </div>\n      </div>\n    </div>\n    <div className=\"bookmark-btn-div\">\n      <Button className=\"bookmark-btn\">\n        <IoBookmarkOutline />\n      </Button>\n    </div>\n  </ContentCardWrapper>\n);\n\nexport default ContentCard;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\n\nconst Image = ({ childImageSharp, extension, publicURL, alt, ...rest }) => {\n  if (!childImageSharp && extension === \"svg\") {\n    return (\n      <div className=\"old-gatsby-image-wrapper\">\n        <img src={publicURL} alt={alt} />\n      </div>\n    );\n  } else {\n    return <GatsbyImage image={childImageSharp.gatsbyImageData} {...rest} alt={alt} />;\n  }\n};\n\nexport default Image;\n","import styled from \"styled-components\";\n\n\nconst PageHeaderWrapper = styled.div`\n        position: relative;\n        overflow: hidden;\n        z-index:1;\n        .page-header {\n            text-align: center;\n            position: relative;\n            height: auto;\n            margin: 3rem auto;\n            padding: 0 1rem 0;\n            z-index: 99;\n            h1 {\n                padding-top: 3rem;\n            }\n        }\n        \n        .feature-image{\n            margin: 2rem auto;\n            max-height: 62.5rem;\n            max-width: 31rem;\n            object-fit: contain;    \n        }\n        .breadcrumbs {\n            display: flex;\n            justify-content: center;\n            margin-top: 1.5rem;  \n            h5 {\n                display: inline-block;\n                margin:0 0.4rem;\n                opacity: .7;\n            }\n            p{\n                margin: 0;\n                display: inline-block;\n            }\n        } \n    }\n`;\n\nexport default PageHeaderWrapper;\n","import React from \"react\";\nimport {Link, graphql, useStaticQuery} from \"gatsby\";\n\nimport slugify from \"../../utils/slugify\";\nimport PageHeaderWrapper from \"./pageHeader.style\";\nimport Image from \"../../components/image\";\n\nconst authorField = (author, isSlugAvailable) => {\n  return(\n    <>\n      {\n        isSlugAvailable ?\n          <Link to={`/community/members/${slugify(author.name)}`}>\n            <span>{author.name}</span>\n          </Link>\n          : <span>{author.name}</span>\n      }\n    </>\n  );\n};\n\nconst PageHeader = ({ category, title, subtitle,  author, thumbnail }) => {\n  let isSlugAvailable = false;\n  if(author){\n    const validMembers = useStaticQuery(\n      graphql`\n                query validMemberss{\n                    allMdx(\n                        filter:{ \n                            fields:{ collection:{eq:\"members\"} }\n                        }\n                    ) {\n                        nodes {\n                            frontmatter {\n                                name\n                            }\n                        }\n                    }\n                }\n            `\n    );\n    isSlugAvailable = validMembers.allMdx.nodes.some(matter => matter.frontmatter.name == author.name);\n  }\n  return (\n    <PageHeaderWrapper>\n      <div className=\"page-header\">\n        { thumbnail && <div className=\"feature-image\">\n          <Image {...thumbnail} imgStyle={{ objectFit: \"contain\"}} alt={title}/>\n        </div>}\n        <h1 className=\"page-title\">{title}</h1>\n        {subtitle && (<h3>{subtitle}</h3>)}\n        {category && (\n          <div className=\"breadcrumbs\">\n            <span>\n              <h5>Category:</h5>\n              <p key={category}>\n                <Link to={`/blog/category/${slugify(category)}`}>\n                  <span>{category}</span>\n                </Link>\n              </p>\n            </span>\n            {author && (\n              <>\n                <span>\n                  <h5>By:</h5>\n                  <p>{authorField(author, isSlugAvailable)}</p>\n                </span>\n              </>\n            )}\n          </div>\n        )}\n        {!category && author && (\n          <div className=\"breadcrumbs post\">\n            <h5>By:</h5>\n            <span>{authorField(author, isSlugAvailable)}</span>\n          </div>\n        )}\n        {/*{!author && path && (*/}\n        {/*    <div className=\"breadcrumbs page\">*/}\n        {/*        <>*/}\n        {/*            <span> Home </span> <span> {\">\"} </span> {path}*/}\n        {/*        </>*/}\n        {/*    </div>*/}\n        {/*)}*/}\n      </div>\n    </PageHeaderWrapper>\n  );\n};\nexport default PageHeader;\n","import styled from \"styled-components\";\nexport const BlogPageWrapper = styled.div`\n\n    .blog-grid-wrapper{\n        margin: 5rem auto;\n    }\n\n    @media only screen and (max-width: 992px) {\n        .blog-page-wrapper{\n            margin-bottom: 5rem;\n        }\n    }\n\n    @media only screen and (max-width: 575px) {\n        .blog-grid-wrapper{\n            margin: 0 auto 5rem;\n        }\n    }\n`;\n","import styled from \"styled-components\";\nimport { BlogPageWrapper } from \"../../Blog/Blog-grid/blogGrid.style\";\nexport const LearnPathWrapper = styled.div`\n  ${BlogPageWrapper};\n  margin: 2rem 0;\n  .course-list {\n    display: flex;\n    margin: 2rem 0;\n  }\n  .course-list-cont {\n    padding: 3rem 0;\n    margin: 1rem;\n  }\n  .learning-path-cards {\n    a {\n      color: black;\n    }\n  }\n  @media(max-width: 1200px)\n  {\n    .course-list-cont {\n      margin: 0;\n    }\n\n  }\n`;\n","import styled from \"styled-components\";\n\nconst GetStartedWrapper = styled.div`\n    padding: 1rem 0;\n    h2{\n        margin: 1rem 0;\n    }\n    .get-started-desc{\n        margin: 1rem;\n    }\n    .container-card {\n        display: flex;\n        a {\n            color: black;\n            margin: 1rem;\n            \n        }\n        .card {\n            padding: 2rem;\n            background-color: #eee;\n            max-width: 350px;\n            min-height: 200px;\n            h2 {\n                font-size: 1.6rem;\n                margin: 1rem 0;\n            }\n        }\n    }\n    \n    @media (max-width: 1200px)\n    {\n        padding: 1rem 0;\n        .get-started-desc{\n            margin: 0;\n        }\n        .container-card {\n            flex-wrap: wrap;\n            justify-content: center;\n            align-items: center;\n            .card{\n                margin: 0;\n                max-width: none;\n            }\n            a{\n                margin: 1rem 0rem;\n            }  \n        } \n    }\n    @media (max-width: 400px)\n    {\n        .container-card {\n            .card {\n                padding: 2rem 1rem;\n            }\n        }\n\n    }\n`;\n\nexport default GetStartedWrapper;","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport GetStartedWrapper from \"./get-started.styles\";\n\n\nconst GetStarted = () => (\n  <GetStartedWrapper>\n    <div className=\"get-started-desc\">\n      <h2>Get Started</h2>\n      <p>Meshery is the service mesh management plane which offers lifecycle, configuration, and performance management of service meshes and their workloads.</p>\n    </div>\n    <div className=\"container-card\">\n      <Link to=\"/service-mesh-management/meshery\">\n        <div className=\"card\">\n          <h2>Set up</h2>\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id sem id magna tempus fringilla. Suspendisse posuere nibh et dictum varius.</p>\n        </div>\n      </Link>\n      <Link to=\"/service-mesh-management/meshery/getting-started\">\n        <div className=\"card\">\n          <h2>Run Meshery</h2>\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id sem id magna tempus fringilla. Suspendisse posuere nibh et dictum varius.</p>\n        </div>\n      </Link>\n      <Link to=\"/service-mesh-management/meshery/operating-service-meshes\">\n        <div className=\"card\">\n          <h2>Manage Meshery</h2>\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id sem id magna tempus fringilla. Suspendisse posuere nibh et dictum varius.</p>\n        </div>\n      </Link>\n    </div>\n  </GetStartedWrapper>\n);\n\nexport default GetStarted;\n","import React from \"react\";\n// import Card from \"../../../components/Card\";\nimport { Row, Col, Container } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport { graphql, Link } from \"gatsby\";\nimport { LearnPathWrapper } from \"./courseslist.style\";\nimport ContentCard from \"../../../components/Learn-Components/content-card\";\nimport Button from \"../../../reusecore/Button\";\nimport Layout from \"../../../components/layout\";\nimport SEO from \"../../../components/seo\";\nimport Navigation from \"../../General/Navigation\";\nimport Footer from \"../../General/Footer\";\nimport { GlobalStyle } from \"../../app.style\";\nimport theme from \"../../../theme/app/themeStyles\";\nimport { ThemeProvider } from \"styled-components\";\nimport GetStarted from \"../../../components/Learn-Components/get-started-section\";\n\n\nexport const query = graphql`\n  query CoursesBySlug($learnpath: String!) {\n    allMdx(\n      filter: {\n        fields: { learnpath: { eq: $learnpath } }\n        frontmatter: { docType: { eq: \"Course\" } }\n      }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          courseTitle\n          description\n          themeColor\n          videos\n          lectures\n          cardImage {\n            childImageSharp {\n              gatsbyImageData(width: 200, layout: CONSTRAINED)\n            }\n            extension\n            publicURL\n          }\n        }\n        fields {\n          slug\n          course\n          learnpath\n        }\n      }\n    }\n  }\n`;\nconst LearningPathGrid = (coursesData) => {\n  console.log(coursesData.data);\n  const getTitle = (learnPathTitle) => {\n    const learnPath = learnPathTitle.split(\"-\");\n    let str = learnPath.reduce((title, name, idx) => {\n      if (idx == learnPath.length - 1)\n        return title + name.charAt(0).toUpperCase() + name.slice(1);\n      else return title + name.charAt(0).toUpperCase() + name.slice(1) + \" \";\n    }, \"\");\n    return str;\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO\n          title=\"Learn Service Mesh\"\n          description=\"Learn Service Meshes: Istio, Linkerd, Envoy, Consul, Maesh, Kuma, App Mesh, Citrix, Tanzu Service Mesh\"\n          image=\"/images/workshops.png\"\n        />\n        <Navigation />\n        <PageHeader\n          title={getTitle(coursesData.data.allMdx.nodes[0].fields.learnpath)}\n        />\n        <Container>\n          <LearnPathWrapper>\n            <Button url=\"/learn-ng\" title=\"Go Back\" className=\"go-back-btn\" />\n            <Row className=\"course-list\">\n              <Col sm={0} lg={2} xl={2}>\n                SideBar Component\n              </Col>\n              <Col sm={12} lg={10} xl={10}>\n                <GetStarted />\n                <div className=\"course-list-cont\">\n                  <h2>Courses</h2>\n                  <Row className=\"learning-path-cards\">\n                    {coursesData.data.allMdx.nodes.map((tutorial) => {\n                      return (\n                        <Col sm={12} key={tutorial.id}>\n                          <Link to={tutorial.fields.course}>\n                            <ContentCard chapter={tutorial} />\n                          </Link>\n                        </Col>\n                      );\n                    })}\n                  </Row>\n                </div>\n              </Col>\n            </Row>\n          </LearnPathWrapper>\n        </Container>\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nexport default LearningPathGrid;\n","module.exports = function slugify (text) {\n    return text.toString().toLowerCase()\n        .replace(/\\s+/g, \"-\")           // Replace spaces with -\n        .replace(/[^\\w\\-]+/g, \"\")       // Remove all non-word chars\n        .replace(/\\-\\-+/g, \"-\")         // Replace multiple - with single -\n        .replace(/^-+/, \"\")             // Trim - from start of text\n        .replace(/-+$/, \"\");             // Trim - from end of text\n};\n\n"],"sourceRoot":""}