{"version":3,"sources":["webpack://Layer5/./src/components/image.js","webpack://Layer5/./src/reusecore/PageHeader/pageHeader.style.js","webpack://Layer5/./src/reusecore/PageHeader/index.js","webpack://Layer5/./src/sections/Learn-Layer5/Courses-List/courseslist.style.js","webpack://Layer5/./src/components/Learn-Components/Content-Card/content-card.style.js","webpack://Layer5/./src/components/Learn-Components/Content-Card/index.js","webpack://Layer5/./src/components/Learn-Components/Setup-Pre-Requisites/setup-pre-req.style.js","webpack://Layer5/./src/components/Learn-Components/Setup-Pre-Requisites/index.js","webpack://Layer5/./src/components/Learn-Components/TOC-Learning-Path/toc.style.js","webpack://Layer5/./src/components/Learn-Components/TOC-Learning-Path/index.js","webpack://Layer5/./src/sections/Learn-Layer5/Courses-List/index.js","webpack://Layer5/./src/templates/courses-list.js","webpack://Layer5/./src/utils/slugify.js","webpack://Layer5/./src/assets/images/meshery-operator/meshery-operator-dark.svg"],"names":["childImageSharp","extension","publicURL","alt","rest","G","image","gatsbyImageData","className","src","styled","authorField","author","isSlugAvailable","Link","to","slugify","name","category","title","subtitle","thumbnail","useStaticQuery","allMdx","nodes","some","matter","frontmatter","imgStyle","objectFit","key","CoursesListWrapper","chapter","id","courseTitle","chapterTitle","description","Button","Meshery","MesheryOperator","props","theme","secondaryColor","preReqSteps","link","coursesData","map","item","href","learnPath","PageHeader","sm","lg","xl","tutorial","fields","course","learnPathTitle","data","pageContext","learnpath","split","reduce","idx","length","charAt","toUpperCase","slice","Navigation","Footer","module","exports","text","toString","toLowerCase","replace"],"mappings":"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","file":"component---src-templates-courses-list-js-4b1769c1f60119f09a22.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\n\nconst Image = ({ childImageSharp, extension, publicURL, alt, ...rest }) => {\n  if (!childImageSharp && extension === \"svg\") {\n    return (\n      <div className=\"old-gatsby-image-wrapper\">\n        <img src={publicURL} alt={alt} />\n      </div>\n    );\n  } else {\n    return <GatsbyImage image={childImageSharp.gatsbyImageData} {...rest} alt={alt} />;\n  }\n};\n\nexport default Image;\n","import styled from \"styled-components\";\n\n\nconst PageHeaderWrapper = styled.div`\n        position: relative;\n        overflow: hidden;\n        z-index:1;\n        .page-header {\n            text-align: center;\n            position: relative;\n            height: auto;\n            margin: 3rem auto;\n            padding: 0 1rem 0;\n            z-index: 99;\n            h1 {\n                padding-top: 3rem;\n            }\n        }\n        \n        .feature-image{\n            margin: 2rem auto;\n            max-height: 62.5rem;\n            max-width: 31rem;\n            object-fit: contain;    \n        }\n        .breadcrumbs {\n            display: flex;\n            justify-content: center;\n            margin-top: 1.5rem;  \n            h5 {\n                display: inline-block;\n                margin:0 0.4rem;\n                opacity: .7;\n            }\n            p{\n                margin: 0;\n                display: inline-block;\n            }\n        } \n    }\n`;\n\nexport default PageHeaderWrapper;\n","import React from \"react\";\nimport {Link, graphql, useStaticQuery} from \"gatsby\";\n\nimport slugify from \"../../utils/slugify\";\nimport PageHeaderWrapper from \"./pageHeader.style\";\nimport Image from \"../../components/image\";\n\nconst authorField = (author, isSlugAvailable) => {\n  return(\n    <>\n      {\n        isSlugAvailable ?\n          <Link to={`/community/members/${slugify(author.name)}`}>\n            <span>{author.name}</span>\n          </Link>\n          : <span>{author.name}</span>\n      }\n    </>\n  );\n};\n\nconst PageHeader = ({ category, title, subtitle,  author, thumbnail }) => {\n  let isSlugAvailable = false;\n  if(author){\n    const validMembers = useStaticQuery(\n      graphql`\n                query validMemberss{\n                    allMdx(\n                        filter:{ \n                            fields:{ collection:{eq:\"members\"} }\n                        }\n                    ) {\n                        nodes {\n                            frontmatter {\n                                name\n                            }\n                        }\n                    }\n                }\n            `\n    );\n    isSlugAvailable = validMembers.allMdx.nodes.some(matter => matter.frontmatter.name == author.name);\n  }\n  return (\n    <PageHeaderWrapper>\n      <div className=\"page-header\">\n        { thumbnail && <div className=\"feature-image\">\n          <Image {...thumbnail} imgStyle={{ objectFit: \"contain\"}} alt={title}/>\n        </div>}\n        <h1 className=\"page-title\">{title}</h1>\n        {subtitle && (<h3>{subtitle}</h3>)}\n        {category && (\n          <div className=\"breadcrumbs\">\n            <span>\n              <h5>Category:</h5>\n              <p key={category}>\n                <Link to={`/blog/category/${slugify(category)}`}>\n                  <span>{category}</span>\n                </Link>\n              </p>\n            </span>\n            {author && (\n              <>\n                <span>\n                  <h5>By:</h5>\n                  <p>{authorField(author, isSlugAvailable)}</p>\n                </span>\n              </>\n            )}\n          </div>\n        )}\n        {!category && author && (\n          <div className=\"breadcrumbs post\">\n            <h5>By:</h5>\n            <span>{authorField(author, isSlugAvailable)}</span>\n          </div>\n        )}\n        {/*{!author && path && (*/}\n        {/*    <div className=\"breadcrumbs page\">*/}\n        {/*        <>*/}\n        {/*            <span> Home </span> <span> {\">\"} </span> {path}*/}\n        {/*        </>*/}\n        {/*    </div>*/}\n        {/*)}*/}\n      </div>\n    </PageHeaderWrapper>\n  );\n};\nexport default PageHeader;\n","import styled from \"styled-components\";\nexport const CoursesListWrapper = styled.div`\n\n  .page-header {\n    margin: 3rem auto 5rem;\n  }\n  .course-list {\n    display: flex;\n    margin: 2rem 0;\n  }\n  .course-list-cont {\n    padding: 3rem 0;\n    margin: 1rem;\n  }\n  .learning-path-cards {\n    a {\n      color: black;\n    }\n  }\n  @media(max-width: 1200px)\n  {\n    .course-list-cont {\n      margin: 0;\n    }\n\n  }\n`;\n","import styled from \"styled-components\";\n\nconst ContentCardWrapper = styled.div`\n  padding: 2rem;\n  margin: 2rem 0;\n  background-color: #fafafa;\n  display: flex;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  justify-content: space-between;\n  :hover {\n    border-color: black;\n    transition: background 150ms ease-out 0s, border 150ms ease-out 0s,\n      transform 150ms ease-out 0s;\n    transform: translate3d(0px, -3px, 0px);\n    box-shadow: rgba(0, 0, 0, 0.08) 0px 3px 10px 0px;\n  }\n\n  .chapter-info {\n    display: flex;\n    width: 60%;\n    justify-content: space-between;\n    .info {\n      display: flex;\n      align-items: center;\n      span {\n        margin: 0 0.5rem;\n      }\n    }\n  }\n\n  .chapter-content {\n    h2 {\n      margin: 1rem 0;\n    }\n    p {\n      width: 85%;\n    }\n  }\n\n  .bookmark-btn-div {\n    display: flex;\n    align-items: end;\n  }\n\n  .bookmark-btn {\n    background-color: #fafafa;\n    min-width: auto;\n    :hover {\n      color: black;\n      background-color: #fafafa;\n    }\n  }\n  @media screen and (max-width: 1200px) {\n    .chapter-info {\n      width: 60%;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    .chapter-content-div {\n      padding: 1rem 0;\n    }\n    .bookmark-btn-div {\n      justify-content: end;\n    }\n\n    .chapter-info {\n      width: 80%;\n    }\n    .chapter-content {\n      p {\n        width: 100%;\n      }\n    }\n  }\n  @media screen and (max-width: 400px) {\n    padding: 1rem 1rem;\n    .chapter-info {\n      width: 100%;\n    }\n  }\n`;\n\nexport default ContentCardWrapper;\n","import React from \"react\";\nimport ContentCardWrapper from \"./content-card.style\";\nimport {\n  IoDocumentTextOutline,\n  IoVideocam,\n  IoBookmarkOutline,\n} from \"react-icons/io5\";\nimport Button from \"../../../reusecore/Button\";\n\nconst ContentCard = ({ chapter }) => (\n  <ContentCardWrapper>\n    <div className=\"chapter-content-div\" id={chapter.frontmatter.courseTitle ? chapter.frontmatter.courseTitle : null} >\n      <div className=\"chapter-content\">\n        <h2>\n          {chapter.frontmatter.chapterTitle\n            ? chapter.frontmatter.chapterTitle\n            : chapter.frontmatter.courseTitle}\n        </h2>\n        <p>{chapter.frontmatter.description}</p>\n      </div>\n      <div className=\"chapter-info\">\n        {/* <div className=\"info\">\n          <IoVideocam /> <span>{chapter.frontmatter.videos} videos</span>\n        </div>\n        <div className=\"info\">\n          <IoDocumentTextOutline />{\" \"}\n          <span>{chapter.frontmatter.lectures} lectures</span>\n        </div> */}\n      </div>\n    </div>\n    <div className=\"bookmark-btn-div\">\n      <Button className=\"bookmark-btn\">\n        <IoBookmarkOutline />\n      </Button>\n    </div>\n  </ContentCardWrapper>\n);\n\nexport default ContentCard;\n","import styled from \"styled-components\";\n\nconst SetupPreReqWrapper = styled.div`\n    padding: 1rem 0;\n    h2{\n        margin: 1rem 0;\n    }\n    .get-started-desc{\n        margin: 1rem;\n    }\n    .container-card {\n        display: flex;\n        a {\n            color: black;\n            margin: 1rem;\n        }\n        .card {\n            padding: 2rem;\n            background-color: #eee;\n            max-width: 350px;\n            min-height: 200px;\n            .card-header {\n                display: flex;\n                flex: auto;\n                img {\n                    height: 3rem;\n                    align-self: center;\n                    flex: 0 0 25%;\n                }\n                svg {\n                    font-size: 4.15rem;\n                    align-self: center;\n                    flex: 0 0 25%;\n                }\n                h2 {\n                    font-size: 1.75rem;\n                    margin: 1rem 0;\n                }\n            }\n        }\n    }\n    \n    @media (max-width: 1200px)\n    {\n        padding: 1rem 0;\n        .get-started-desc{\n            margin: 0;\n        }\n        .container-card {\n            flex-wrap: wrap;\n            justify-content: center;\n            align-items: center;\n            .card{\n                margin: 0;\n                max-width: none;\n                .card-header {\n                    img {\n                        height: 2rem;\n                        flex: 0 0 10%;\n                    }\n                    svg {\n                        font-size: 2.15rem;\n                        flex: 0 0 10%;\n                    }\n                }\n            }\n            a{\n                margin: 1rem 0rem;\n            }  \n        } \n    }\n    @media (max-width: 400px)\n    {\n        .container-card {\n            .card {\n                padding: 2rem 1rem;\n            }\n        }\n\n    }\n`;\n\nexport default SetupPreReqWrapper;","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport SetupPreReqWrapper from \"./setup-pre-req.style\";\nimport Meshery from \"../../../assets/images/meshery/icon-only/meshery-logo-light.svg\";\nimport { BsTerminalFill } from \"react-icons/bs\";\nimport MesheryOperator from \"../../../assets/images/meshery-operator/meshery-operator-dark.svg\";\n\n\nconst SetupPreReq = () => (\n  <SetupPreReqWrapper>\n    <div className=\"get-started-desc\" id=\"pre-requisites\">\n      <h2>Pre-requisites</h2>\n      <p>In this learning path, we will be using Meshery as the management plane to manage the service meshes. Meshery is the service mesh management plane which offers lifecycle, configuration, and performance management of service meshes and their workloads.</p>\n    </div>\n    <div className=\"container-card\" id=\"Set up\">\n      <Link to=\"/service-mesh-management/meshery\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h2>Install Meshery</h2>\n            <BsTerminalFill />\n          </div>\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id sem id magna tempus fringilla. Suspendisse posuere nibh et dictum varius.</p>\n        </div>\n      </Link>\n      <Link to=\"/service-mesh-management/meshery/getting-started\" id=\"Run Meshery\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h2>Run Meshery</h2>\n            <img src={Meshery} />\n          </div>\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id sem id magna tempus fringilla. Suspendisse posuere nibh et dictum varius.</p>\n        </div>\n      </Link>\n      <Link to=\"/service-mesh-management/meshery/operating-service-meshes\" id=\"Manage Meshery\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <h2>Manage Meshery</h2>\n            <img src={MesheryOperator} />\n          </div>\n          <p>lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras id sem id magna tempus fringilla. Suspendisse posuere nibh et dictum varius.</p>\n        </div>\n      </Link>\n    </div>\n  </SetupPreReqWrapper>\n);\n\nexport default SetupPreReq;\n","import styled from \"styled-components\";\n\nconst TOCWrapper = styled.div`\n\n    position: sticky;\n    top: 10rem;\n    left: 0;\n    margin-left: -3rem;\n\n    .go-back {\n        margin-left: 1rem;\n        a {\n            display: inline-flex;\n            svg {\n                align-self: center;\n                font-size: 1.5rem;\n                color: rgb(177, 182, 184);\n                width: 100%;\n                max-width: 1.5rem;\n            }\n            h4 {\n                font-weight: 500;\n                text-transform: capitalize;\n                font-size: 1.25rem;\n                white-space: nowrap;\n            }\n            &:hover {\n                svg, h4 {\n                    color: #3C494F;\n                }\n            }\n        }\n        margin-bottom: 1rem;\n    }\n\n  .toc-sub-heading {\n        margin-top: 1rem;\n        font-weight: 500;\n        font-size: 1.15rem;\n  }\n    \n\n    .toc-list {\n  \n        ul {\n            position: relative;\n            padding-inline-start: 2.75rem;\n            list-style-type: none;\n            \n            li {\n                line-height: 3rem;\n                width: fit-content;\n                margin-left: 1rem;\n\n                &::marker {\n                    color: rgba(177, 182, 184, 0.75);\n                }\n                p {\n                    margin: 0;\n                    font-size: 1rem;\n\n                    a {\n                        color: rgba(0, 0, 0, 0.65);\n                    }\n                }\n                &:hover {\n                    &::marker, p, a {\n                        color: ${props => props.theme.secondaryColor};\n                    }\n                }\n\n            }\n            .active-link {\n                &::marker, p, a {\n                    color: ${props => props.theme.secondaryColor};\n                }\n            }\n        }\n    }\n`;\n\nexport default TOCWrapper;\n","import React from \"react\";\nimport { HiOutlineChevronLeft } from \"react-icons/hi\";\nimport { Link } from \"gatsby\";\nimport TOCWrapper from \"./toc.style\";\n\n\nconst preReqSteps = [\n  {name: \"Set up\", link: \"/service-mesh-management/meshery\"},\n  {name:\"Run Meshery\",link:\"/service-mesh-management/meshery/getting-started\"},\n  {name: \"Manage Meshery\", link: \"/service-mesh-management/meshery/operating-service-meshes\"}\n];\n\nconst TOC = ({ coursesData }) => {\n\n  // const reformatTOC= (data) => {\n  //   let newData = data.split(\"-\").join(\" \");\n  //   let firstLetter = newData.charAt(0).toUpperCase();\n  //   newData = `${firstLetter}${newData.slice(1)}`;\n  //   return newData;\n  // };\n\n  return (\n    <TOCWrapper>\n      <div className=\"go-back\">\n        <Link to={\"/learn-ng\"}>\n          <HiOutlineChevronLeft />\n          <h4>Learning Paths</h4>\n        </Link>\n      </div>\n      <div className=\"toc-list\">\n        <ul>\n          <Link to=\"#pre-requisites\">\n            <h5 className=\"toc-sub-heading\">\n              Pre-requisites\n            </h5>\n          </Link>\n          {preReqSteps.map(item =>\n            <li key={item.link}>\n              <p className=\"toc-item\">\n                <a href={`#${item.name}`}>\n                  {item.name}\n                </a>\n              </p>\n            </li>\n          )}\n\n          <Link to=\"#courses-list\">\n            <h5 className=\"toc-sub-heading\">\n              Courses\n            </h5>\n          </Link>\n\n          {coursesData.map((item) => (\n            <li key={item}>\n              <p className=\"toc-item\">\n                <a href={`#${item.frontmatter.courseTitle}`}>\n                  {item.frontmatter.courseTitle}\n                </a>\n              </p>\n            </li>\n          ))}\n\n        </ul>\n      </div>\n    </TOCWrapper>\n  );\n};\n\nexport default TOC;\n","import React from \"react\";\nimport { Row, Col, Container } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport { CoursesListWrapper } from \"./courseslist.style\";\nimport ContentCard from \"../../../components/Learn-Components/Content-Card\";\nimport Button from \"../../../reusecore/Button\";\nimport SetupPreReq from \"../../../components/Learn-Components/Setup-Pre-Requisites\";\nimport { Link } from \"gatsby\";\nimport TOC from \"../../../components/Learn-Components/TOC-Learning-Path\";\n\n\nconst CoursesList = ({ coursesData, learnPath}) => {\n  return (\n    <CoursesListWrapper>\n      <PageHeader\n        title={learnPath}\n      />\n      <Container>\n        <Row className=\"course-list\">\n          <Col sm={0} lg={3} xl={3}>\n            <TOC coursesData={coursesData} />\n          </Col>\n          <Col sm={12} lg={9} xl={9}>\n            <SetupPreReq />\n            <div className=\"course-list-cont\" id=\"courses-list\">\n              <h2>Courses</h2>\n              <Row className=\"learning-path-cards\">\n                {coursesData.map((tutorial) => {\n                  return (\n                    <Col sm={12} key={tutorial.id} name={tutorial.frontmatter.courseTitle}>\n                      <Link to={tutorial.fields.course}>\n                        <ContentCard chapter={tutorial} />\n                      </Link>\n                    </Col>\n                  );\n                })}\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </CoursesListWrapper>\n  );\n};\n\nexport default CoursesList;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Navigation from \"../sections/General/Navigation\";\nimport Footer from \"../sections/General/Footer\";\nimport { GlobalStyle } from \"../sections/app.style\";\nimport theme from \"../theme/app/themeStyles\";\nimport { ThemeProvider } from \"styled-components\";\nimport CoursesList from \"../sections/Learn-Layer5/Courses-List\";\n\n\nexport const query = graphql`\n  query CoursesBySlug($learnpath: String!) {\n    allMdx(\n      filter: {\n        fields: { learnpath: { eq: $learnpath } }\n        frontmatter: { docType: { eq: \"Course\" } }\n      }\n    ) {\n      nodes {\n        id\n        frontmatter {\n          courseTitle\n          description\n          themeColor\n          videos\n          lectures\n          cardImage {\n            childImageSharp {\n              gatsbyImageData(width: 200, layout: CONSTRAINED)\n            }\n            extension\n            publicURL\n          }\n        }\n        fields {\n          slug\n          course\n          learnpath\n        }\n      }\n    }\n  }\n`;\nconst CoursesListTemplate = ({data, pageContext}) => {\n  const getTitle = (learnPathTitle) => {\n    const learnPath = learnPathTitle.split(\"-\");\n    let str = learnPath.reduce((title, name, idx) => {\n      if (idx == learnPath.length - 1)\n        return title + name.charAt(0).toUpperCase() + name.slice(1);\n      else\n        return title + name.charAt(0).toUpperCase() + name.slice(1) + \" \";\n    }, \"\");\n    return str;\n  };\n  const learnpath = getTitle(pageContext.learnpath);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO\n          title={`${learnpath}`}\n          description=\"Learn Service Meshes: Istio, Linkerd, Envoy, Consul, Maesh, Kuma, App Mesh, Citrix, Tanzu Service Mesh\"\n        />\n        <Navigation />\n        <CoursesList coursesData={data.allMdx.nodes} learnPath={learnpath} />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nexport default CoursesListTemplate;\n","module.exports = function slugify (text) {\n    return text.toString().toLowerCase()\n        .replace(/\\s+/g, \"-\")           // Replace spaces with -\n        .replace(/[^\\w\\-]+/g, \"\")       // Remove all non-word chars\n        .replace(/\\-\\-+/g, \"-\")         // Replace multiple - with single -\n        .replace(/^-+/, \"\")             // Trim - from start of text\n        .replace(/-+$/, \"\");             // Trim - from end of text\n};\n\n","export default __webpack_public_path__ + \"static/meshery-operator-dark-aabaafd987b887ca9b60c9322b365cf6.svg\";"],"sourceRoot":""}