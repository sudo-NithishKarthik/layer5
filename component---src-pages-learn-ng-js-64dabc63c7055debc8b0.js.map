{"version":3,"sources":["webpack://Layer5/./src/components/Terminal/Terminal.style.js","webpack://Layer5/./src/components/Terminal/index.js","webpack://Layer5/./src/components/image.js","webpack://Layer5/./src/sections/Learn-Layer5/learnlayer5.style.js","webpack://Layer5/./src/components/Learn-Components/Card-Component/learn-card.style.js","webpack://Layer5/./src/components/Learn-Components/Card-Component/index.js","webpack://Layer5/./src/components/Learn-Components/LearnInfo/learninfo.style.js","webpack://Layer5/./src/components/Learn-Components/LearnInfo/index.js","webpack://Layer5/./src/components/Learn-Components/what-await-section/what-await.styles.js","webpack://Layer5/./src/components/Learn-Components/what-await-section/index.js","webpack://Layer5/./src/sections/Learn-Layer5/index.js","webpack://Layer5/./src/pages/learn-ng.js","webpack://Layer5/./src/reusecore/PageHeader/pageHeader.style.js","webpack://Layer5/./src/reusecore/PageHeader/index.js","webpack://Layer5/./src/utils/slugify.js"],"names":["TerminalWrapper","styled","props","theme","secondaryColor","lines","title","noScroll","className","map","line","index","Fragment","key","short","color","indent","Array","fill","_","code","childImageSharp","extension","publicURL","alt","rest","G","image","gatsbyImageData","src","LearnLayer5GridWrapper","tutorial","courseCount","Link","to","fields","learnpath","style","borderTop","frontmatter","themeColor","courseTitle","status","description","cardImage","filterData","data","dtype","pgtype","dataList","val","push","Set","length","courses","chapters","meshes","coursesCount","chaptersCount","meshesCount","xs","sm","lg","md","xl","Terminal","useStaticQuery","PageHeader","learnPaths","nodes","id","allCourses","filter","obj","edges","Button","secondary","url","Navigation","Footer","authorField","author","isSlugAvailable","slugify","name","category","subtitle","thumbnail","allMdx","some","matter","imgStyle","objectFit","module","exports","text","toString","toLowerCase","replace"],"mappings":"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","file":"component---src-pages-learn-ng-js-64dabc63c7055debc8b0.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const TerminalWrapper = styled.div`\n  --blue: #14c6cb;\n  --vagrant-l1: #66a2ff;\n  --white: #fff;\n  --gray-7: #f7f7f9;\n  --gray-6: #dcdde0;\n  --gray-5: #bdbec2;\n  --gray-4: #76767d;    \n  --gray-3: #4c4c53;\n  --gray-2: #323339;\n  --gray-1: #1d1e23;\n  --terminal-radius: 2px;\n  --terminal-title-color: var(--gray-2);\n  --terminal-body-color: var(--gray-1);\n\n  width: 837px;\n\n  .title-bar {\n    display: flex;\n    align-items: center;\n    background: var(--terminal-title-color);\n    width: 100%;\n    height: 46px;\n    border-radius: var(--terminal-radius) var(--terminal-radius) 0 0;\n\n    .title {\n      color: var(--gray-4);\n      font-family: 'Courier New', Courier, monospace;\n      font-size: 13.5px;\n      margin: 0 auto;\n    }\n\n    .window-controls {\n      position: absolute;\n      display: block;\n      list-style: none;\n      margin-left: 16px;\n      margin-top: 0;\n      margin-bottom: 0;\n      padding: 0;\n\n      li {\n        display: inline-block;\n        width: 14px;\n        height: 14px;\n        background: var(--gray-1);\n        border-radius: 12px;\n        margin-right: 7px;\n      }\n    }\n  }\n\n  .content {\n    width: 100%;\n    min-height: 525px;\n    height: 100%;\n    background: var(--terminal-body-color);\n    border-radius: 0 0 var(--terminal-radius) var(--terminal-radius);\n    padding: 24px 32px;\n\n    @media (min-width: 768px) {\n      height: 525px;\n    }\n  }\n\n.overflow-wrapper {\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: scroll;\n\n  /* Hides the scrollbars */\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n  &::-webkit-scrollbar {\n    /* Safari */\n    -webkit-appearance: none;\n    width: 0;\n    height: 0;\n  }\n\n  .code-wrapper {\n     pre {\n      padding: 0;\n      margin: 0;\n      width: 100%;\n      height: 100%;\n      font-style: normal;\n      font-weight: normal;\n      font-size: 12px;\n      line-height: 27px;\n      white-space: pre-wrap;\n      color: ${props => props.theme.secondaryColor};\n      &.short {\n        line-height: 16px;\n      }\n      &.navy {\n        color: var(--vagrant-l1);\n      }\n      &.gray {\n        color: var(--gray-5);\n      }\n      &.white {\n        color: var(--white);\n      }\n\n      @media (min-width: 768px){\n        font-size: 13.5px;\n        line-height: 26px;\n      }\n    }\n  }\n}\n\n.no-scroll-overflow-wrapper {\n\n  .code-wrapper {\n    bottom: 0;\n    position: absolute;\n    min-height: 100%;\n  }\n}`;\n","import React, { Fragment } from \"react\";\nimport {TerminalWrapper} from \"./Terminal.style\";\n\n/**\n * A Terminal is a simple component representing the presentation\n * of a terminal in a static state.\n *\n * Animated versions of the terminal are available in higher order components,\n * but they work by manipulating the passed props down to this terminal to\n * represent the active state in a given frame.\n *\n * Example Usage:\n *\n *  <Terminal\n *    lines={[\n *      {\n *        code: 'Â» Building . . . . . . . . . . . . .',\n *      },\n *      {\n *        color: 'gray',\n *        code: 'Creating new buildpack-based image using builder:',\n *        indent: 1,\n *      },\n *      {\n *        color: 'gray',\n *        code: 'heroku/buildpacks:18',\n *        indent: 1,\n *      },\n *      {\n *        color: 'navy',\n *        code: 'â Creating pack client',\n *        indent: 1,\n *      },\n *      {\n *        color: 'white',\n *        code: 'â ´ Building image',\n *      },\n *    ]}\n *  />\n */\nconst Terminal = ({ lines, title, noScroll }) => {\n  return (\n    <TerminalWrapper>\n      <div className=\"title-bar\">\n        <ul className=\"window-controls\">\n          <li/>\n          <li/>\n          <li/>\n        </ul>\n        {title && <div className=\"title\">{title}</div>}\n      </div>\n      <div className=\"content\">\n        <div className={\n          noScroll ? \"no-scroll-overflow-wrapper overflow-wrapper\" : \"overflow-wrapper\"\n        }\n        >\n          <div className=\"code-wrapper\">\n            {lines && lines.map((line, index) => (\n              <Fragment key={index}>\n                <pre className={`${line.short ? \"short\": \"\"} ${line.color ? line.color: \"blue\"}`} >\n                  {line.indent &&\n                            new Array(line.indent * 2)\n                              .fill({})\n                              .map((_, index) => (\n                                <Fragment key={index}>&nbsp;</Fragment>\n                              ))}\n                  {line.code}\n                </pre>\n              </Fragment>\n            ))}\n          </div>\n        </div>\n      </div>\n    </TerminalWrapper>\n  );\n};\n\nexport default Terminal;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\n\nconst Image = ({ childImageSharp, extension, publicURL, alt, ...rest }) => {\n  if (!childImageSharp && extension === \"svg\") {\n    return (\n      <div className=\"old-gatsby-image-wrapper\">\n        <img src={publicURL} alt={alt} />\n      </div>\n    );\n  } else {\n    return <GatsbyImage image={childImageSharp.gatsbyImageData} {...rest} alt={alt} />;\n  }\n};\n\nexport default Image;\n","import styled from \"styled-components\";\n\nexport const LearnLayer5GridWrapper = styled.div`\n\n    margin: 3rem auto 6rem;\n\n    .page-header {\n        margin: 0rem auto 0.5rem !important;\n    }\n    .learn-subtitle {\n        text-align: center;\n    }\n\n    .learning-path-cards{\n        margin: auto;\n        justify-content: center;\n        padding: 6rem 0;\n    }\n    .join-community{\n        max-width: 70rem;\n        display: flex;\n        margin: auto;\n        padding: 3rem 4rem;\n        align-items: center;\n        \n        button{\n            margin-top: 1.5rem;\n        }\n    }\n    .join-community_text-and_button{\n        h1{\n            margin-bottom: 1rem;\n        }\n        p{\n            margin: auto;\n            max-width: 42rem;\n        }\n    }\n    @media(max-width: 768px)\n    {\n        .join-community{\n            flex-direction: column;\n            justify-content: center;\n            padding: 3rem 1rem;\n            text-align: center;\n        }\n    }\n    @media(max-width:500px){\n        .learning-path-cards{\n            padding: 6rem 2rem;\n        }\n    }\n`;\n","import styled from \"styled-components\";\n\nconst CardWrapper = styled.div`\n    max-width: 23.5rem;\n    min-height: 16rem;\n    margin: auto;\n    border-radius: 1rem;\n\n    .card-link{\n        color: black;\n    }\n\n    .card-parent{\n        background: rgba(255, 255, 255);\n        border-top: 5px solid rgb(117, 232, 168);\n        border-radius: 0.25rem;\n        min-height: 16rem;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        box-shadow: 0px 0.75rem 1rem 0.25rem rgb(0 0 0 / 12%);\n        position: relative;\n    }\n\n    .card-head{\n        display: flex;\n        padding: 1rem;\n        span{\n            border: 1px solid rgb(60 73 79);\n            color: black;\n            border-radius: 0.8rem;\n            padding: 0.05rem 0.75rem;\n            font-size: 1rem;\n        }\n    }\n\n    .card-desc{\n        padding: 0 1rem;\n        .summary {\n            color: rgba(0, 0, 0, 0.75);\n        }\n        p{\n            font-size: 1rem;\n        }\n    }\n\n    .card-subdata {\n        padding: 0 1rem;\n        position: absolute;\n        bottom: 0rem;\n        p{\n            font-size: 1rem;\n            font-weight: 600;\n        }\n    }\n\n    .card-image{\n        text-align: center;\n        position: absolute;\n        bottom: 0.1rem;\n        right: 0.75rem;\n        opacity: 0.2;\n        \n        img{\n            height: 8.5rem;\n            width: 8.5rem;\n        }\n    }\n\n    @media(max-width: 1300px){\n        margin: 1rem auto;\n    }\n`;\n\nexport default CardWrapper;","import React from \"react\";\nimport CardWrapper from \"./learn-card.style\";\nimport Image from \"../../image\";\nimport { Link} from \"gatsby\";\n\nconst CardComponent = ({ tutorial , courseCount}) => {\n\n  return (\n    <CardWrapper>\n      <Link to={tutorial.fields.learnpath} className=\"card-link\">\n        <div\n          style={{ borderTop: `5px solid ${tutorial.frontmatter.themeColor}` }}\n          className=\"card-parent\"\n        >\n          <div>\n            <div className=\"card-head\">\n              <h3>\n                {tutorial.frontmatter.title\n                  ? tutorial.frontmatter.title\n                  : tutorial.frontmatter.courseTitle}\n              </h3>\n              {tutorial.frontmatter.status ? (\n                <p>\n                  <span>New</span>\n                </p>\n              ) : null}\n            </div>\n            <div className=\"card-desc\">\n              <p className=\"summary\">{tutorial.frontmatter.description}</p>\n            </div>\n            <div className=\"card-subdata\">\n              <p>{courseCount} Course{courseCount ===1  ? \"\" : \"s\"}</p>\n            </div>\n          </div>\n          <div className=\"card-image\">\n            <Image\n              {...tutorial.frontmatter.cardImage}\n              alt={tutorial.frontmatter.title}\n            />\n          </div>\n        </div>\n      </Link>\n    </CardWrapper>\n  );\n};\n\nexport default CardComponent;\n","import styled from \"styled-components\";\n\nconst InfoWrapper = styled.div`\n\n  margin: 2rem auto;\n\n  .info-row {\n    margin: auto;\n    .col {\n      p {\n        color: rgba(0, 0, 0, 0.7);\n        margin: 1rem auto;\n      }\n\n      @media screen and (max-width: 992px) {\n        margin: 1rem auto;\n      }\n      @media screen and (max-width: 992px) {\n        text-align: center;\n      }\n    }\n  }\n`;\n\nexport default InfoWrapper;\n","import React from \"react\";\nimport InfoWrapper from \"./learninfo.style\";\nimport {Col, Row} from \"../../../reusecore/Layout\";\n\nconst filterData = (data, dtype, pgtype) => {\n  const dataList = [];\n\n  data.map((val) => {\n    if(pgtype && val[\"node\"][\"fields\"][\"pageType\"] === \"chapter\") {\n      if(val[\"node\"][\"fields\"][dtype])\n        dataList.push(val[\"node\"][\"fields\"][dtype]);\n    } else if(pgtype === \"\") {\n      if(val[\"node\"][\"fields\"][dtype])\n        dataList.push(val[\"node\"][\"fields\"][dtype]);\n    }\n  });\n\n  const newData = [...new Set(dataList)];\n  return newData.length;\n};\n\n\nconst LearnInfo = ({courses, chapters, meshes}) => {\n\n  const coursesCount = filterData(courses, \"course\", \"\");\n  const chaptersCount = filterData(chapters, \"chapter\", \"\");\n  const meshesCount = filterData(meshes, \"section\", \"chapter\");\n\n  return (\n    <InfoWrapper>\n      <Row className=\"info-row\">\n        <Col xs={12} sm={6} lg={4}>\n          <h2>{coursesCount} {coursesCount === 1 ? \"course\" : \"courses\"}</h2>\n          <p>\n            Learning the service mesh the right way. From the best learing paths\n            by the experts at Layer5 and learn how to mesh.\n          </p>\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <h2>{chaptersCount} {chaptersCount === 1 ? \"chapter\" : \"chapters\"}</h2>\n          <p>\n            Learning the service mesh the right way. From the best learing paths\n            by the experts at Layer5 and learn how to mesh.\n          </p>\n        </Col>\n        <Col xs={12} sm={6} lg={4}>\n          <h2>{meshesCount} service {meshesCount === 1 ? \"mesh\" : \"meshes\"} available</h2>\n          <p>Istio, Linkerd</p>\n        </Col>\n      </Row>\n    </InfoWrapper>\n  );\n};\n\nexport default LearnInfo;\n","import styled from \"styled-components\";\n\nconst WhatAwaitsWrapper = styled.div`\n    padding: 1rem;\n    margin: 1rem auto 6rem;\n\n    .what-await-section {\n        margin: 0;\n    }\n\n    .what-await-section-info {\n        align-self: center;\n        padding: 2rem 1rem;\n        flex: 0 0 50%;\n        max-width: 50%;\n        h2{\n            margin: 1rem auto;\n            max-width: 75%;\n        }\n        p {\n            max-width: 75%;\n            margin: auto;\n        }\n    }\n\n    .what-await-section-image {\n        flex: 0 0 50%;\n        max-width: 50%;\n        overflow: hidden;\n        div {\n            margin: auto;\n        }\n    }\n\n    @media screen and (max-width: 1200px) {\n        .what-await-section-info, .what-await-section-image {\n            flex: 0 0 100%;\n            max-width: 100%;\n        }\n    }\n`;\n\nexport default WhatAwaitsWrapper;","import React from \"react\";\nimport WhatAwaitsWrapper from \"./what-await.styles\";\nimport { Row, Col, Container } from \"../../../reusecore/Layout\";\nimport Terminal from \"../../../components/Terminal\";\n\nconst WhatAwaitsSection = () => {\n  return (\n    <WhatAwaitsWrapper>\n      <Row className=\"what-await-section\">\n        <Col sm={12} md={6} xl={4} className=\"what-await-section-info\">\n          <h2>What Awaits you</h2>\n          <p>\n              Learning service mesh the right way. From the best\n              learning path by the experts at Layer5 and learn how\n              to mesh\n          </p>\n        </Col>\n        <Col sm={12} md={6} xl={4} className=\"what-await-section-image\">\n        \n          <Terminal\n            lines={[\n              { code: \"$ mesheryctl pattern apply -f canary-v3.yaml\", color: \"white\" },\n              { code: \"Â» Deploying...\", color: \"navy\" },\n              {\n                code: \"â Deployment successfully rolled out!\",\n                color: \"green\",\n              },\n              { code: \"\\n\" },\n              { code: \"Â» Traffic splitting...\", color: \"navy\" },\n              {\n                code: \"â 5% of user requests to v3.\",\n                color: \"green\",\n              },\n              {\n                code: \"â 30% of user requests to v3.\",\n                color: \"green\",\n              },\n              {\n                code: \"â 60% of user requests to v3.\",\n                color: \"green\",\n              },\n              {\n                code: \"â 90% of user requests to v3.\",\n                color: \"green\",\n              },\n              {\n                code: \"â 100% of user requests to v3.\",\n                color: \"green\",\n              },\n              { code: \"\\n\" },\n              {\n                code: \"Pattern successfully applied. Rollout of 'canary-v3' completed.\",\n                color: \"navy\",\n              },\n              {\n                code: \"Â» Prerelease URL: https://payments-v3.meshery.run\",\n                color: \"green\",\n              },\n              {\n                code: \"Â» Release URL: https://payments.meshery.run\",\n                color: \"green\",\n              },\n            ]}\n          />\n              \n        </Col>\n      </Row>\n    </WhatAwaitsWrapper>\n  );\n};\n\nexport default WhatAwaitsSection;\n","import React from \"react\";\nimport { LearnLayer5GridWrapper } from \"./learnlayer5.style\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport PageHeader from \"../../reusecore/PageHeader\";\nimport { Row, Col, Container } from \"../../reusecore/Layout\";\nimport CardComponent from \"../../components/Learn-Components/Card-Component\";\nimport LearnInfo from \"../../components/Learn-Components/LearnInfo\";\nimport WhatAwaitsSection from \"../../components/Learn-Components/what-await-section\";\nimport Button from \"../../reusecore/Button\";\n\nconst LearnPathsPage = () => {\n  const data = useStaticQuery(graphql`\n    query allLearnPath {\n      learnPaths: allMdx(\n        filter: {\n          fields: { collection: { eq: \"content-learn\" }, pageType: { eq: \"learnpath\" } }\n        }\n      ) {\n        nodes {\n          id\n          frontmatter {\n            title\n            description\n            themeColor\n            courses\n            cardImage {\n              childImageSharp {\n                gatsbyImageData(width: 200, layout: CONSTRAINED)\n              }\n              extension\n              publicURL\n            }\n            status\n          }\n          fields {\n            slug\n            learnpath\n          }\n        }\n      }\n      coursesCount: allMdx(\n        filter: { fields: { collection: { eq: \"content-learn\" } } }\n      ) {\n        edges {\n          node {\n            fields {\n              course\n            }\n          }\n        }\n      }\n      chaptersCount: allMdx(\n        filter: { fields: { collection: { eq: \"content-learn\" } } }\n      ) {\n        edges {\n          node {\n            fields {\n              chapter\n            }\n          }\n        }\n      }\n      meshesCount: allMdx(\n        filter: { fields: { collection: { eq: \"content-learn\" } } }\n      ) {\n        edges {\n          node {\n            fields {\n              section\n              pageType\n            }\n          }\n        }\n      }\n      allCourses: allMdx(\n        filter: {\n          fields: { collection: { eq: \"content-learn\" },pageType: { eq: \"course\" } }\n        }\n      ) {\n        nodes{\n          fields{\n            learnpath\n          }\n        }\n      }\n    }\n  `);\n\n\n  const getCoursesOfaLearningPath = (learnpath) => data.allCourses.nodes.filter(obj => obj.fields.learnpath === learnpath);\n\n  return (\n    <LearnLayer5GridWrapper>\n      <Container>\n        <PageHeader title=\"Learning Paths\" />\n        <div className=\"learn-subtitle\">\n          <p>Learn how to service mesh.Learn how to run</p>\n          <p>Meshery, install Istio and deploy a sample app</p>\n        </div>\n        <Row className=\"learning-path-cards\">\n          {data.learnPaths.nodes.map((tutorial) => (\n            <Col sm={12} md={6} xl={4} key={tutorial.id}>\n              <CardComponent tutorial={tutorial} courseCount={getCoursesOfaLearningPath(tutorial.fields.learnpath).length} />\n            </Col>\n          ))}\n        </Row>\n      </Container>\n      <WhatAwaitsSection />\n      <Container>\n        <LearnInfo\n          courses={data.coursesCount.edges}\n          chapters={data.chaptersCount.edges}\n          meshes={data.meshesCount.edges}\n        />\n        <div className=\"join-community\">\n          <div className=\"join-community_text-and_button\">\n            <h1>Don't Learn Alone</h1>\n            <p>\n              Check Out the Layer5 community, Join us on Slack and learn with\n              the community\n            </p>\n          </div>\n          <Button\n            secondary\n            title=\"Join Our Talented Community\"\n            url=\"http://slack.layer5.io/\"\n          />\n        </div>\n      </Container>\n    </LearnLayer5GridWrapper>\n  );\n};\n\nexport default LearnPathsPage;\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Navigation from \"../sections/General/Navigation\";\nimport LearnPathsPage from \"../sections/Learn-Layer5\";\nimport Footer from \"../sections/General/Footer\";\nimport { GlobalStyle } from \"../sections/app.style\";\nimport theme from \"../theme/app/themeStyles\";\n\n\nconst LearnLayer5Page = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Layout>\n        <GlobalStyle />\n        <SEO title=\"Learn to Service Mesh\"\n          description=\"Learn Service Meshes: Istio, Linkerd, Envoy, Consul, Maesh, Kuma, App Mesh, Citrix, Tanzu Service Mesh\"\n          image=\"/images/workshops.png\" />\n        <Navigation />\n        <LearnPathsPage />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\nexport default LearnLayer5Page;\n","import styled from \"styled-components\";\n\n\nconst PageHeaderWrapper = styled.div`\n        position: relative;\n        overflow: hidden;\n        z-index:1;\n        .page-header {\n            text-align: center;\n            position: relative;\n            height: auto;\n            margin: 3rem auto;\n            padding: 0 1rem 0;\n            z-index: 99;\n            h1 {\n                padding-top: 3rem;\n            }\n        }\n        \n        .feature-image{\n            margin: 2rem auto;\n            max-height: 62.5rem;\n            max-width: 31rem;\n            object-fit: contain;    \n        }\n        .breadcrumbs {\n            display: flex;\n            justify-content: center;\n            margin-top: 1.5rem;  \n            h5 {\n                display: inline-block;\n                margin:0 0.4rem;\n                opacity: .7;\n            }\n            p{\n                margin: 0;\n                display: inline-block;\n            }\n        } \n    }\n`;\n\nexport default PageHeaderWrapper;\n","import React from \"react\";\nimport {Link, graphql, useStaticQuery} from \"gatsby\";\n\nimport slugify from \"../../utils/slugify\";\nimport PageHeaderWrapper from \"./pageHeader.style\";\nimport Image from \"../../components/image\";\n\nconst authorField = (author, isSlugAvailable) => {\n  return(\n    <>\n      {\n        isSlugAvailable ?\n          <Link to={`/community/members/${slugify(author.name)}`}>\n            <span>{author.name}</span>\n          </Link>\n          : <span>{author.name}</span>\n      }\n    </>\n  );\n};\n\nconst PageHeader = ({ category, title, subtitle,  author, thumbnail }) => {\n  let isSlugAvailable = false;\n  if(author){\n    const validMembers = useStaticQuery(\n      graphql`\n                query validMemberss{\n                    allMdx(\n                        filter:{ \n                            fields:{ collection:{eq:\"members\"} }\n                        }\n                    ) {\n                        nodes {\n                            frontmatter {\n                                name\n                            }\n                        }\n                    }\n                }\n            `\n    );\n    isSlugAvailable = validMembers.allMdx.nodes.some(matter => matter.frontmatter.name == author.name);\n  }\n  return (\n    <PageHeaderWrapper>\n      <div className=\"page-header\">\n        { thumbnail && <div className=\"feature-image\">\n          <Image {...thumbnail} imgStyle={{ objectFit: \"contain\"}} alt={title}/>\n        </div>}\n        <h1 className=\"page-title\">{title}</h1>\n        {subtitle && (<h3>{subtitle}</h3>)}\n        {category && (\n          <div className=\"breadcrumbs\">\n            <span>\n              <h5>Category:</h5>\n              <p key={category}>\n                <Link to={`/blog/category/${slugify(category)}`}>\n                  <span>{category}</span>\n                </Link>\n              </p>\n            </span>\n            {author && (\n              <>\n                <span>\n                  <h5>By:</h5>\n                  <p>{authorField(author, isSlugAvailable)}</p>\n                </span>\n              </>\n            )}\n          </div>\n        )}\n        {!category && author && (\n          <div className=\"breadcrumbs post\">\n            <h5>By:</h5>\n            <span>{authorField(author, isSlugAvailable)}</span>\n          </div>\n        )}\n        {/*{!author && path && (*/}\n        {/*    <div className=\"breadcrumbs page\">*/}\n        {/*        <>*/}\n        {/*            <span> Home </span> <span> {\">\"} </span> {path}*/}\n        {/*        </>*/}\n        {/*    </div>*/}\n        {/*)}*/}\n      </div>\n    </PageHeaderWrapper>\n  );\n};\nexport default PageHeader;\n","module.exports = function slugify (text) {\n    return text.toString().toLowerCase()\n        .replace(/\\s+/g, \"-\")           // Replace spaces with -\n        .replace(/[^\\w\\-]+/g, \"\")       // Remove all non-word chars\n        .replace(/\\-\\-+/g, \"-\")         // Replace multiple - with single -\n        .replace(/^-+/, \"\")             // Trim - from start of text\n        .replace(/-+$/, \"\");             // Trim - from end of text\n};\n\n"],"sourceRoot":""}