{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn-ng/mastering-meshery-istio/introduction-to-service-meshes/istio/circuit-breaking/","result":{"data":{"chapter":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"chapterTitle\": \"Circuit Breaking\",\n  \"description\": \"Meshery is the service mesh managemen plane which offers lifecycle, configuration, and performance management of service meshes and their workloads.\",\n  \"videos\": 4,\n  \"lectures\": 12\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(ChapterStyle, {\n    mdxType: \"ChapterStyle\"\n  }, mdx(\"p\", null, \"In this chapter we will configure circuit breaking using Istio. Circuit breaking allows developers to write applications that limit the impact of failures, latency spikes, and other undesirable effects of network peculiarities. This task will show how to configure circuit breaking for connections, requests, and outlier detection.\"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \"Preparing for circuit breaking\"), mdx(\"br\", null), mdx(\"p\", null, \"Before we can configure circuit breaking, please try to access the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"product page\"), \" app from within \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Meshery\"), \" to ensure all the calls are making it through \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"without\"), \" errors as we did in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/learn-ng/mastering-meshery-istio/introduction-to-service-meshes/istio/observability\"\n  }, \"Observability chapter\"), \" (\", mdx(\"a\", {\n    href: MesheryInitialLoadTest\n  }, \"see screenshot\"), \").\"), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \" Configure circuit breaking\"), mdx(\"br\", null), \"Now that we have the needed services in place, it is time to configure circuit breaking using a destination rule.\", mdx(\"p\", null, \"Using Meshery, navigate to the Istio management page:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Enter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"default\"), \" in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Namespace\"), \" field.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Click the (+) icon on the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Apply Custom Configuration\"), \" card and paste the configuration below.\")), mdx(\"p\", null, \"Manual step for can be found \", mdx(\"a\", {\n    href: \"#appendix\"\n  }, \"here\")), mdx(\"p\", null, \"This will update the existing destination rule definition for product page service to break the circuit if there are more than one connection and more than one pending request.\"), mdx(\"p\", null, \"In a few, we should be able to verify the destination rule by using the command below:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl get destinationrule productpage -o yaml\\n\")), mdx(\"p\", null, \"Config:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-yaml\"\n  }, \"apiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: productpage\\nspec:\\n  host: productpage\\n  subsets:\\n    - /obserlabels:\\n        version: v1\\n      name: v1\\n  trafficPolicy:\\n    connectionPool:\\n      http:\\n        http1MaxPendingRequests: 1\\n        maxRequestsPerConnection: 1\\n      tcp:\\n        maxConnections: 1\\n    outlierDetection:\\n      baseEjectionTime: 3m\\n      consecutiveErrors: 1\\n      interval: 1s\\n      maxEjectionPercent: 100\\n    tls:\\n      mode: ISTIO_MUTUAL\\n\")), mdx(\"h2\", {\n    className: \"chapter-sub-heading\"\n  }, \" Time to trip the circuit\"), mdx(\"br\", null), \"In the circuit-breaker settings, we specified maxRequestsPerConnection: 1 and http1MaxPendingRequests: 1. This should mean that if we exceed more than one request per connection and more than one pending request, we should see the istio-proxy sidecar open the circuit for further requests/connections.\", mdx(\"p\", null, \"Let us now use Meshery to make several calls to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"product page\"), \" app by changing the number of concurrent connections to 5 from within Meshery's Performance page.\"), mdx(\"p\", null, \"Once you have updated the fields, you now click on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Run Test\"), \".\"), mdx(\"p\", null, \"This will run the load test and show the results in a chart. (\", mdx(\"a\", {\n    href: MesheryCbLoadTest\n  }, \" see screenshot \"), \").\"), mdx(\"p\", null, \"You should only see a percentage of the requests succeed and the rest trapped by the configured circuit breaker.\"), mdx(\"br\", null), mdx(\"h2\", null, \" \", mdx(\"a\", {\n    name: \"appendix\"\n  }), \" Manual Steps\"), mdx(\"h3\", {\n    className: \"chapter-alt-heading\"\n  }, \" Configure circuit breaking\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl apply -f - <<EOF\\napiVersion: networking.istio.io/v1alpha3\\nkind: DestinationRule\\nmetadata:\\n  name: productpage\\nspec:\\n  host: productpage\\n  subsets:\\n  - labels:\\n      version: v1\\n    name: v1\\n  trafficPolicy:\\n    tls:\\n      mode: ISTIO_MUTUAL\\n    connectionPool:\\n      tcp:\\n        maxConnections: 1\\n      http:\\n        http1MaxPendingRequests: 1\\n        maxRequestsPerConnection: 1\\n    outlierDetection:\\n      consecutiveErrors: 1\\n      interval: 1s\\n      baseEjectionTime: 3m\\n      maxEjectionPercent: 100\\nEOF\\n\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"Circuit Breaking","description":"Meshery is the service mesh managemen plane which offers lifecycle, configuration, and performance management of service meshes and their workloads."},"fields":{"slug":"learn-ng/mastering-meshery-istio/introduction-to-service-meshes/istio/circuit-breaking/","course":"introduction-to-service-meshes","learnpath":"mastering-meshery-istio","chapter":"circuit-breaking"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Introduction to Service Meshes - Hands On","toc":["getting-started","deploy-an-application","expose-services","observability","routing-and-canary","fault-injection","circuit-breaking","mutual-tls"]},"fields":{"slug":"learn-ng/mastering-meshery-istio/introduction-to-service-meshes/"}}]}},"pageContext":{"learnpath":"mastering-meshery-istio","slug":"learn-ng/mastering-meshery-istio/introduction-to-service-meshes/istio/circuit-breaking/","course":"introduction-to-service-meshes","section":"istio","chapter":"circuit-breaking","pageType":"chapter"}},"staticQueryHashes":["4047814605","7929417"]}