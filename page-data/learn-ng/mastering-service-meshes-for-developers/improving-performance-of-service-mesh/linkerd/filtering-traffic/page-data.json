{"componentChunkName":"component---src-templates-learn-chapter-js","path":"/learn-ng/mastering-service-meshes-for-developers/improving-performance-of-service-mesh/linkerd/filtering-traffic/","result":{"data":{"chapter":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"docType\": \"Chapter\",\n  \"chapterTitle\": \"Working With Meshery & linkerd\",\n  \"description\": \"Meshery is the service mesh managemen plane which offers lifecycle, configuration, and performance management of service meshes and their workloads.\",\n  \"videos\": 4,\n  \"lectures\": 12\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Chapters available\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"chapterTitle":"Working With Meshery & linkerd","description":"Meshery is the service mesh managemen plane which offers lifecycle, configuration, and performance management of service meshes and their workloads."},"fields":{"slug":"learn-ng/mastering-service-meshes-for-developers/improving-performance-of-service-mesh/linkerd/filtering-traffic/","course":"improving-performance-of-service-mesh","learnpath":"mastering-service-meshes-for-developers","chapter":"filtering-traffic"}},"course":{"nodes":[{"frontmatter":{"courseTitle":"Improving The Service Mesh","toc":["filtering-traffic","mutual-TLS"]},"fields":{"slug":"learn-ng/mastering-service-meshes-for-developers/improving-performance-of-service-mesh/"}}]}},"pageContext":{"learnpath":"mastering-service-meshes-for-developers","slug":"learn-ng/mastering-service-meshes-for-developers/improving-performance-of-service-mesh/linkerd/filtering-traffic/","course":"improving-performance-of-service-mesh","section":"linkerd","chapter":"filtering-traffic","pageType":"chapter"}},"staticQueryHashes":["4047814605","7929417"]}